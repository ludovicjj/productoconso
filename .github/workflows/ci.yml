name: Tests
on: [push]
jobs:
  fonctional-tests:
    name: Fonctional Tests
    runs-on: ${{ matrix.operating-systeme }}
    strategy:
      fail-fast: false
      matrix:
        operating-systeme: [ ubuntu-latest ]
        php-versions: [ 7.3 ]
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: symfony
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare database
        run: |
          php bin/console doctrine:migrations:migrate --no-interaction --env=test
        env:
          DATABASE_URL: mysql://root:password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      - name: Run functional tests
        run: php vendor/bin/simple-phpunit
        env:
          DATABASE_URL: mysql://root:password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      - name: Analyze coding style
        run: php vendor/bin/phpcs